name: Deploy sites (staging)

on:
  push:
    branches: [ staging ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - site: labpulse.com
            namespace: staging-websites-virgon
    steps:
      - uses: actions/checkout@v2
      - name: Log in to ECR
        uses: docker/login-action@v1
        with:
          registry: 598984531759.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            SITE=${{ matrix.site }}
          tags: 598984531759.dkr.ecr.us-east-2.amazonaws.com/science-medicine-group-${{ matrix.site }}:staging-${{ github.sha }}

  deploy:
    needs: [build, deploy-services]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - site: labpulse.com
            namespace: staging-websites-virgon
          - site: scienceboard.net
            namespace: staging-websites-leonis
    steps:
      - name: Deploy to Kubernetes
        run: npx @endeavorb2b/rancher2cli dl basecms-website science-medicine-group-${{ matrix.site }} --namespace ${{ matrix.namespace }} 598984531759.dkr.ecr.us-east-2.amazonaws.com/science-medicine-group-${{ matrix.site }}:staging-${{ github.sha }}
        env:
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          RANCHER_URL: ${{ secrets.RANCHER_URL }}

  build-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: maxmind-geoip
    steps:
      - uses: actions/checkout@v2
      - name: Log in to ECR
        uses: docker/login-action@v1
        with:
          registry: 598984531759.dkr.ecr.us-east-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            SERVICE=${{ matrix.service }}
          tags: 598984531759.dkr.ecr.us-east-2.amazonaws.com/science-medicine-group-${{ matrix.service }}:staging-${{ github.sha }}

  deploy-services:
    needs: [build-services]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: maxmind-geoip
            namespace: staging-websites-virgon
          - service: maxmind-geoip
            namespace: staging-websites-leonis
    steps:
      - name: Deploy to Kubernetes
        run: npx @endeavorb2b/rancher2cli dl basecms-website-service science-medicine-group-${{ matrix.service }} --namespace ${{ matrix.namespace }} 598984531759.dkr.ecr.us-east-2.amazonaws.com/science-medicine-group-${{ matrix.service }}:staging-${{ github.sha }}
        env:
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          RANCHER_URL: ${{ secrets.RANCHER_URL }}


  post-deploy-failure:
    if: failure()
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure
        run: npx @parameter1/base-cms-website-deployment-tool notify-failed
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ENVIRONMENT: staging
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
          TRAVIS_REPO_SLUG: ${{ github.repository }}
          TRAVIS_TAG: staging-${{ github.sha }}

  post-deploy-success:
    if: success()
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Notify success
        run: npx @parameter1/base-cms-website-deployment-tool notify-finished
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          ENVIRONMENT: staging
          RANCHER_CLUSTERID: ${{ secrets.RANCHER_CLUSTERID_BASECMS }}
          TRAVIS_REPO_SLUG: ${{ github.repository }}
          TRAVIS_TAG: staging-${{ github.sha }}
